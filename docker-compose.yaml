
services:
  backend:
    image: aydengeo:1.0
    build:
      context: .
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      POSTGRES_USER: ${USERNAME_DB}
      POSTGRES_PASSWORD: ${PASSWORD_DB}
      POSTGRES_DB: ${POSTGRES_DB}
      PORT_DB: ${PORT_DB}
      HOST_DB: db
      HOST_REDIS: redis
      PORT_REDIS: 6379
    volumes:
      - .:/app


  db:
    image: postgis/postgis:16-3.4
    restart: always
    environment:
      POSTGRES_USER: ${USERNAME_DB}
      POSTGRES_PASSWORD: ${PASSWORD_DB}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5436:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ayden -d aydengeodata" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis_con
    restart: always

    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
      
volumes:
  redis_data:
  db_data:
